// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  email       String?  @unique
  friends     String[] // MongoDB does not support relations, store as ObjectId strings
  views       String[]
  verified    Boolean? @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  profileUrl  String?
  token       String?
  profession  String?
  location    String?
}

model Friend {
  id          String   @id @default(auto()) @map("_id")  @db.ObjectId
  firstName   String
  lastName    String
  email       String  @unique
  friends     String[]
  views       String[]
  verified    Boolean? @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  profileUrl  String?
  location    String?
  profession  String?
}


model Post {
  id          String   @id @default(auto()) @map("_id")  @db.ObjectId
  userId      String  
  description String
  image       String?
  likes       String[] 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  views     Int?     @default(0) @map("__v")
}

model PostComments {
  id        String   @id @default(auto()) @map("_id")  @db.ObjectId
  userId    String   
  postId    String?  
  comment   String?
  from      String?  
  likes     String[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  views     Int?     @default(0) @map("__v")
}
